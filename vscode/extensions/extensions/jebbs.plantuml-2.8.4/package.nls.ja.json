{
	"plantuml.exportCurrent.title": "カーソル位置のダイアグラムをエクスポート",
	"plantuml.exportDocument.title": "ファイル内のダイアグラムをエクスポート",
	"plantuml.exportWorkspace.title": "ワークスペース内のダイアグラムをエクスポート",
	"plantuml.preview.title": "カーソル位置のダイアグラムをプレビュー",
	"plantuml.URLCurrent.title": "カーソル位置のダイアグラムをURLに変換",
	"plantuml.URLDocument.title": "ファイル内のダイアグラムをURLに変換",
	"plantuml.extractSource.title": "Extract PlantUML Diagram Source from Image",
	"plantuml.configuration.configTitle": "PlantUML configuration",
	"plantuml.configuration.exportFormat": "エクスポートのフォーマット指定。空白の場合はエクスポート実行ごとにフォーマットを選択します",
	"plantuml.configuration.jar": "代替の plantuml.jar の位置を指定。 空白の場合は組み込みのjarファイルを使用します",
	"plantuml.configuration.fileExtensions": "エクスポートする拡張子を指定。 特にワークスペースでの出力で、\".java\" のようなソースコードでもダイアグラムをエクスポートしたい場合に独自の拡張子を設定することができます",
	"plantuml.configuration.exportSubFolder": "ダイアグラムを出力元のファイルと同名のディレクトリにエクスポートします",
	"plantuml.configuration.exportConcurrency": "複数のダイアグラムをエクスポートする際の並列実行数の設定します",
	"plantuml.configuration.exportOutDirName": "ワークスペース内のダイアグラムをエクスポートする場合に、この設定で指定されたディレクトリに出力されます",
	"plantuml.configuration.previewAutoUpdate": "プレビューウィンドウを自動的に更新するかを指定します",
	"plantuml.configuration.previewSnapIndicators": "Decides if to display the snap indicators in the preview window.",
	"plantuml.configuration.server": "その場でUMLダイアグラムを生成するPlantUMLサーバーを指定します",
	"plantuml.configuration.urlFormat": "URL形式を指定。空白の場合はURLを生成するたびにフォーマットを選択します",
	"plantuml.configuration.urlResult": "URL出力結果形式を指定。 Simple URL または、MarkDown を使用できます",
	"plantuml.configuration.render": "ダイアグラムのエクスポートとプレビューの描画方法を選択します。\nLocal: 伝統的なローカルで描画する方法です。あなたはまずはじめに JAVA と GraphViz を設定する必要があります。\nPlantUMLServer: \"plantuml.server\" の設定で指定されたサーバーでダイアグラムを描画します。こちらのほうが高速ですが、別途サーバーが必要です。\nデフォルトでは Local が設定されます",
	"plantuml.configuration.includes": "ダイアグラムをプレビューまたはエクスポートする前に読み込むファイルまたはディレクトリを指定できます。 この設定を行なうと、個々のダイアグラムに毎回 \"!include path/to/include.wsd\" などと指定する必要がなくなります",
	"plantuml.configuration.commandArgs": "commandArgsを使用すると、Javaコマンドに引数を追加できます。 \n例：\"-DPLANTUML_LIMIT_SIZE=8192\".",
	"plantuml.configuration.jarArgs": "jarArgs allows you add arguments to plantuml.jar, such as \"-config plantuml.config\".",
	"plantuml.configuration.exportMapFile": "Determine whether export image map (.cmapx) file when export.",
	"plantuml.configuration.java": "Java executable location."
}