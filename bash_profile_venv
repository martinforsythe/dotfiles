## VIRTUALENV
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Projects
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python2
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
source /usr/local/bin/virtualenvwrapper.sh

## PIPENV
PIPENV_DEFAULT_PYTHON_VERSION=/usr/local/bin/python3
eval "$(pipenv --completion)"

## PYENV
export PYENV_ROOT="$HOME/.pyenv"
if [[ -d $PYENV_ROOT ]];
then
    PATH="$PYENV_ROOT/bin:$PATH"
    # initialize pyenv
    eval "$(pyenv init -)"
fi
## Compiler flags for pyenv to discover homebrew's zlib, openssl, and readline
export LDFLAGS="-L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl/lib"
export CPPFLAGS="-I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl/include"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/zlib/lib/pkgconfig"

## only run pip if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true
## enable global pip
gpip() {
      PIP_REQUIRE_VIRTUALENV="" pip2 "$@"
}
gpip3() {
    PIP_REQUIRE_VIRTUALENV="" pip3 "$@"
}

## FUNCTION FOR REMOVING PYTHON FILES
pyclean () {
      find . -type f -name "*.py[co]" -delete
      find . -type d -name "__pycache__" -exec rm -r {} +;
      find . -type d -name ".pytest_cache/" -exec rm -r {} +;
}


